name: build-and-release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14, windows-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up CMake
        uses: lukka/get-cmake@v3.30.3

      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build --config Release -j 4

      - name: Package
        shell: bash
        run: |
          set -e
          APP_NAME=gitdump
          case "${{ matrix.os }}" in
            ubuntu-*)  PKG="${APP_NAME}-linux-x86_64.tar.gz";   tar -czf "$PKG" -C build "${APP_NAME}";;
            macos-*)   PKG="${APP_NAME}-macos-x86_64.tar.gz";   tar -czf "$PKG" -C build "${APP_NAME}";;
            windows-*) PKG="${APP_NAME}-windows-x86_64.zip";    7z a "$PKG" "build/Release/${APP_NAME}.exe" > /dev/null;;
          esac
          echo "PACKAGE=$PKG" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE }}
          path: ${{ env.PACKAGE }}

  release:
    if: github.event_name == 'push' && github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Debug list
        run: ls -l dist
      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
